/* tslint:disable */
/* eslint-disable */
/**
 * HumanLayer Daemon REST API
 * REST API for HumanLayer daemon operations, providing session management, approval workflows, and real-time event streaming capabilities. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DirectoryNotFoundResponse
 */
export interface DirectoryNotFoundResponse {
    /**
     * Error code
     * @type {string}
     * @memberof DirectoryNotFoundResponse
     */
    error: string;
    /**
     * Human-readable error message
     * @type {string}
     * @memberof DirectoryNotFoundResponse
     */
    message: string;
    /**
     * The directory path that does not exist
     * @type {string}
     * @memberof DirectoryNotFoundResponse
     */
    path: string;
    /**
     * Indicates that directory creation is required
     * @type {boolean}
     * @memberof DirectoryNotFoundResponse
     */
    requiresCreation: boolean;
}

/**
 * Check if a given object implements the DirectoryNotFoundResponse interface.
 */
export function instanceOfDirectoryNotFoundResponse(value: object): value is DirectoryNotFoundResponse {
    if (!('error' in value) || value['error'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('path' in value) || value['path'] === undefined) return false;
    if (!('requiresCreation' in value) || value['requiresCreation'] === undefined) return false;
    return true;
}

export function DirectoryNotFoundResponseFromJSON(json: any): DirectoryNotFoundResponse {
    return DirectoryNotFoundResponseFromJSONTyped(json, false);
}

export function DirectoryNotFoundResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DirectoryNotFoundResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'error': json['error'],
        'message': json['message'],
        'path': json['path'],
        'requiresCreation': json['requiresCreation'],
    };
}

export function DirectoryNotFoundResponseToJSON(json: any): DirectoryNotFoundResponse {
    return DirectoryNotFoundResponseToJSONTyped(json, false);
}

export function DirectoryNotFoundResponseToJSONTyped(value?: DirectoryNotFoundResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'error': value['error'],
        'message': value['message'],
        'path': value['path'],
        'requiresCreation': value['requiresCreation'],
    };
}

