name: "Research XS/S Linear Tickets"
on:
  push:
  schedule:
    - cron: "*/15 * * * *"
  workflow_dispatch:
    inputs:
      num_tickets:
        description: "Maximum number of tickets to try and fetch"
        required: false
        type: string
        default: "10"

jobs:
  fetch-tickets:
    runs-on: ubuntu-latest
    outputs:
      ticket_ids: ${{ steps.fetch-tickets.outputs.researchable_ticket_ids }}
    steps:
      - name: "Checkout repository"
        id: checkout-repository
        uses: actions/checkout@v4

      - name: "Setup bun"
        id: setup-bun
        uses: oven-sh/setup-bun@v2

      - name: "Build actions"
        id: build-action
        run: cd .github/actions/fetch-researchable-tickets && bun install

      - name: "Fetch Researchable Linear Tickets"
        id: fetch-tickets
        uses: ./.github/actions/fetch-researchable-tickets
        env:
          LINEAR_API_KEY: ${{ secrets.LINEAR_API_KEY }}
        with:
          num_tickets: ${{ inputs.num_tickets }}

      - name: "Output Ids"
        run: echo ${{steps.fetch-tickets.outputs.researchable_ticket_ids}}

  research-tickets:
    name: Research Ticket ${{matrix.ticket_id}}
    needs:
      - fetch-tickets
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # we don't want all jobs to stop just because one fails
      matrix:
        ticket_id: ${{ fromJSON(needs.fetch-tickets.outputs.ticket_ids)}}
    env:
      TICKET_FILE_PATH: thoughts/shared/tickets/${{matrix.ticket_id}}.md

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          path: humanlayer

      - name: Checkout thoughts repository
        uses: actions/checkout@v4
        with:
          repository: humanlayer/thoughts
          ref: main
          ssh-key: ${{ secrets.THOUGHTS_WRITE_DEPLOY_KEY }}
          path: thoughts

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup repository
        run: npm install -g @anthropic-ai/claude-code

      - name: Install humanlayer CLI globally
        run: cd humanlayer && npm install -g humanlayer

      - name: setup thoughts tool config
        run: |
          echo '{
            "thoughts": {
              "thoughtsRepo": "${{ github.workspace }}/thoughts",
              "reposDir": "repos",
              "globalDir": "global",
              "user": "claude",
              "repoMappings": {}
            }
          }' >> humanlayer/.humanlayer.json

      - name: Initialize thoughts tool
        run: cd humanlayer && humanlayer thoughts init --config-file .humanlayer.json --directory humanlayer

      - name: Setup linear tool
        run: |
          cd humanlayer/hack/linear && npm install && npm install -g .

      - name: Fetch Ticket with Linear CLI
        id: fetch-ticket
        run: linear get-issue ${{ matrix.ticket_id }} >> humanlayer/${{ env.TICKET_FILE_PATH }}

      - name: Fetch images from ticket with Linear CLI
        id: fetch-ticket-images
        run: cd humanlayer && linear fetch-images ${{ matrix.ticket_id}}

      - name: Install Claude Code
        id: run-claude-research
        run: >
          claude -w humanlayer -p "/research_codebase ${{ env.TICKET_FILE_PATH }} 
            Start by reading the ticket and all of the comments.
            Also check /thoughts/shared/images/${{matrix.ticket_id}} for any relevant images and read any you find.
            Then proceed to research the codebase based on the instructions.

            **DO NOT ASK THE USER FOR DIRECTIONS OR CLARIFICATION. Simply proceed to the research based on the information you have been provided with, and then write your research document. **

            If there is already a research document for this ticket and there are comments on the ticket, use the comments as instructions for updating the research document." >> CLAUDE_ANSWER.md

      - name: Sync thoughts
        id: sync-research-document
        run: cd humanlayer && humanlayer thoughts sync

      - name: Add comment
        id: update-ticket-with-notes
        run: linear add-comment -i ${{matrix.ticket_id}} "$(cat CLAUDE_ANSWER.md)"
